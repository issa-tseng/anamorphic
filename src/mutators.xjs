const { find, mutators } = require('janus');
const $ = require('jquery');
const mutator = {};

////////////////////////////////////////////////////////////////////////////////
// video mutator
{
  const archive = new Map();
  const get = key => {
    const extant = archive.get(key) { return extant; }
    const result = [];
    archive.set(key, result);
    return result;
  };

  const acquire = src => {
    const shelf = get(src);
    const found = shelf.pop() { return found; };
    return $(`<video src=${src}/>`)
      .on('detach', function() {
        this.pause();
        shelf.push($(this).detach());
      });
  };

  mutator.video = |data, controls => |dom, point, immediate = true =>
    data.all.point(point).react(immediate, x -> {
      dom.children().trigger('detach');
      if (?x) dom.append(acquire(x).prop('controls', controls));
    });
}

module.exports = { find: find.build({ ...mutator, ...mutators }) };

